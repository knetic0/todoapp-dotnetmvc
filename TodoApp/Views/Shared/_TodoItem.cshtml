@model TodoApp.Models.Todo;
@{

}

<div class="list-group-item list-group-item-action flex-column align-items-start mt-2">
    <div class="d-flex w-100 justify-content-between">
        <h5 class="mb-1">@Model.Title</h5>
        <small>Updated on: @Model.UpdatedDate.ToShortDateString()</small>
    </div>
    @if (!string.IsNullOrEmpty(Model.Description))
    {
        <p class="mb-1">@Model.Description</p>
    }
    else
    {
        <p class="mb-1 text-warning">Description not found!</p>
    }
    <div class="d-flex justify-content-between align-items-center">
        <small>Created on: @Model.CreatedDate.ToShortDateString()</small>
        <div class="d-flex justify-content-end gap-2 align-items-center">
            @if (!Model.IsDone)
            {
                <form asp-action="MarkTodoIsDone" asp-controller="Todo" method="post">
                    @Html.AntiForgeryToken()
                    <input asp-for="@Model.Id" type="hidden" />
                    <button type="submit" class="btn btn-sm btn-outline-success">
                        Mark as done
                    </button>
                </form>
            }
            <form asp-action="UpdateTodo" asp-controller="Todo" method="get">
                @Html.AntiForgeryToken()
                <input asp-for="@Model.Id" type="hidden" />
                <button type="submit" class="btn btn-sm btn-outline-info">
                    Update
                </button>
            </form>
            <form asp-action="DeleteTodo" asp-controller="Todo" method="post">
                @Html.AntiForgeryToken()
                <input asp-for="@Model.Id" type="hidden" />
                <button type="submit" class="btn btn-sm btn-outline-danger">
                    Delete
                </button>
            </form>
        </div>
    </div>
</div>